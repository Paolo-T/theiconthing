{"version":3,"file":"component---src-4-templates-project-details-js-c8f09de252b7a7e5f559.js","mappings":"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","sources":["webpack://todde.design/./src/4_templates/projectDetails.js"],"sourcesContent":["import React from \"react\"\nimport SEO from \"../1_components/Seo\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TransitionPageIn from \"../1_components/TransitionPageIn\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport ProjectsTiles from \"../2_sections/ProjectsTiles\"\n\nexport const data = graphql`\n   query($slug: String!) {\n      projectDataJson(slug: { eq: $slug }) {\n         slug\n         hero {\n            subtitle\n            title\n            heroImg {\n               childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n               }\n            }\n         }\n         content_1 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_1 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         contentList {\n            title\n            listItems {\n               description\n               title\n            }\n         }\n         contentImg_2 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         content_2 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_3 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n      }\n   }\n`\n\nexport default function ProjectDetails({ data }) {\n   const { title, subtitle } = data.projectDataJson.hero\n   const heroImg = getImage(data.projectDataJson.hero.heroImg.childImageSharp.gatsbyImageData)\n   const content_1 = data.projectDataJson.content_1\n   const contentImg_1 = data.projectDataJson.contentImg_1\n   const contentListist = data.projectDataJson.contentList\n   const content_2 = data.projectDataJson.content_2\n   const contentImg_2 = data.projectDataJson.contentImg_2\n   const contentImg_3 = data.projectDataJson.contentImg_3\n\n   return (\n      <>\n         <SEO\n            keywords={[\n               `UI Design`,\n               `UX Design`,\n               `User Experience`,\n               `Web Design`,\n               `Product Design`,\n               `Portfolio`,\n               `App`,\n               `Website`,\n            ]}\n            title={`Paolo Todde | ${title}`}\n         />\n         <div className=\"w-screen\">\n            {/* Hero */}\n            <TransitionPageIn>\n               <section className=\"pt-32 sm:pt-32 md:pt-48 mb-0 md:mb-24 container\">\n                  <div className=\"page-header mb-6\">\n                     <h1 className=\"h1-page w-full text-dark\">{title}</h1>\n                     <p className=\"text-xl md:text-2xl text-grey mb-2\">{subtitle}</p>\n                  </div>\n                  {heroImg && <GatsbyImage image={heroImg} alt={`${title} + \"presentation image\"`} loading=\"eager\" />}\n               </section>\n               {/* Content */}\n               {(Array.isArray(content_1) || content_1.length) && (\n                  <section className=\"w-full text-dark\">\n                     {content_1.map((section, i) => (\n                        <div key={i} className=\"container md:mb-20\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 md:gap-y-16 gap-x-0\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-3 mt-1.5 text-grey\">{section.aside.title}</h4>\n                                 {Object.values(section.aside.list).map((item, i) => (\n                                    <p key={i} className=\"text-grey\">\n                                       {item}\n                                    </p>\n                                 ))}\n                              </div>\n                              <div className=\"mt-10 md:mt-0 col-start-5 col-end-11\">\n                                 <h2>{section.main.title}</h2>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               )}\n               {/* Image */}\n               {(Array.isArray(contentImg_1) || contentImg_1.length) &&\n                  contentImg_1.map((image, i) => (\n                     <GatsbyImage\n                        key={i}\n                        image={image.childImageSharp.gatsbyImageData}\n                        className=\"container grid col-span-12 mt-4 md:mt-0\"\n                        alt={`${title} \"presentation image\"`}\n                        loading=\"lazy\"\n                     />\n                  ))}{\" \"}\n               {/* Content list */}\n               {contentListist.title && (\n                  <section className=\"container mx-auto grid grid-cols-4 md:grid-cols-12 gap-y-6 md:gap-y-6 gap-x-0 py-10 md:py-24 text-dark\">\n                     <h2 className=\"col-start-1 col-end-5 md:col-start-2 md:col-end-4 mb-0 md:mb-4 \">\n                        {contentListist.title}\n                     </h2>\n                     {Array.isArray(contentListist.listItems) &&\n                        contentListist.listItems.map((listItem, i) => (\n                           <div key={i} className=\"col-start-1 col-end-5 md:col-start-5 md:col-end-11\">\n                              <h4 className=\"uppercase tracking-widest col-start-1 col-end-4 md:col-start-1 mb-2\">\n                                 {listItem.title}\n                              </h4>\n                              <p className=\"col-start-4 col-end-12\">{listItem.description}</p>\n                           </div>\n                        ))}\n                  </section>\n               )}\n               {/* Image */}\n               {(Array.isArray(contentImg_2) || contentImg_2.length) &&\n                  contentImg_2.map((image, i) => (\n                     <GatsbyImage\n                        key={i}\n                        image={image.childImageSharp.gatsbyImageData}\n                        className={`container grid col-span-12 mb-20 ${\n                           !data.projectDataJson.contentList.title && \"mt-20\"\n                        }`}\n                        alt={`${title} \"presentation image\"`}\n                        loading=\"lazy\"\n                     />\n                  ))}{\" \"}\n               {/* Content */}\n               {Array.isArray(content_2) && (\n                  <section className=\"w-full text-dark\">\n                     {content_2.map((section, i) => (\n                        <div key={i} className=\"container md:mb-20\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 gap-y-20 gap-x-0\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-2 mt-2 text-grey\">{section.aside.title}</h4>\n                                 {(Array.isArray(section.aside.list) || section.aside.list.length) &&\n                                    Object.values(section.aside.list).map((item, i) => (\n                                       <p key={i} className=\"text-grey\">\n                                          {item}\n                                       </p>\n                                    ))}\n                              </div>\n                              <div className=\"col-start-5 col-end-11 md:mt-10\">\n                                 <h2>{section.main.title}</h2>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               )}\n               {/* Image */}\n               <div\n                  className={\n                     Array.isArray(contentImg_3) & (contentImg_3.length > 3)\n                        ? \"container grid grid-cols-3 gap-y-6 md:gap-x-6 \"\n                        : \"container grid col-span-12\"\n                  }\n               >\n                  {Array.isArray(contentImg_3) &&\n                     contentImg_3.map((image, i) => (\n                        <GatsbyImage\n                           key={i}\n                           image={image.childImageSharp.gatsbyImageData}\n                           alt={`${title} \"presentation image\"`}\n                           loading=\"lazy\"\n                        />\n                     ))}{\" \"}\n                  {/* Other projects */}\n               </div>\n               <ProjectsTiles isPageNav={true} />\n            </TransitionPageIn>\n         </div>\n      </>\n   )\n}\n"],"names":["ProjectDetails","data","title","subtitle","projectDataJson","hero","heroImg","getImage","childImageSharp","gatsbyImageData","content_1","contentImg_1","contentListist","contentList","content_2","contentImg_2","contentImg_3","keywords","className","G","image","alt","loading","Array","isArray","length","map","section","i","key","aside","Object","values","list","item","main","body","listItems","listItem","description","isPageNav"],"sourceRoot":""}