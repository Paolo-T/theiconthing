{"version":3,"file":"29a1caae3718cc2aee074099176417d62114bf93-9caf0784ddcf030fbb36.js","mappings":"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","sources":["webpack://todde.design/./src/1_components/ImgTile.js","webpack://todde.design/./node_modules/react-intersection-observer/react-intersection-observer.modern.mjs","webpack://todde.design/./src/1_components/TransitionInview.js","webpack://todde.design/./src/2_sections/ProjectsTiles.js","webpack://todde.design/./src/icons/lock.svg"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport IconLock from \"../icons/lock.svg\"\nimport Button from \"./Button\"\n\nfunction ImgTile({\n   id,\n   linkTo,\n   hRef,\n   title,\n   titleSmall,\n   description,\n   cta,\n   img,\n   imgAlt,\n   isPageNav,\n   isExternal,\n   isLocked,\n   isHorizontal,\n   classes,\n}) {\n   const imgHoverMotion =\n      '\"transition duration-500 transform cursor-pointer group-hover:scale-[1.025] group-hover:rotate-[0.7deg] \"'\n   return (\n      <div\n         className={`group ${\n            isHorizontal & !isPageNav ? \"xl:grid grid-cols-16 grid-gap items-center\" : \"flex-1 h-full flex flex-col\"\n         } overflow-hidden ${classes}`}\n      >\n         {/* Image */}\n         <div\n            className={`${\n               !isPageNav ? \"h-auto col-start-1 col-end-14 rounded-xl overflow-hidden\" : \"\"\n            } overflow-hidden focus:`}\n         >\n            {linkTo && (\n               <Link to={isLocked ? \"#0\" : linkTo} className=\"cursor-default\">\n                  <div className=\"group\">\n                     <GatsbyImage className={!isLocked && imgHoverMotion} image={img} alt={imgAlt} loading={\"eager\"} />\n                  </div>\n               </Link>\n            )}\n            {isExternal && (\n               <a href={hRef} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <div className=\"group\">\n                     <GatsbyImage className={!isLocked && imgHoverMotion} image={img} alt={imgAlt} loading={\"eager\"} />\n                  </div>\n               </a>\n            )}\n         </div>\n         {/* !END Image */}\n         {!isPageNav && (\n            <div\n               className={`${\n                  isHorizontal ? \"block md:flex xl:block xl:col-start-14 xl:col-end-17 mt-5 xl:mt-0\" : null\n               }`}\n            >\n               <div className=\"flex-1\">\n                  {titleSmall ? (\n                     <h4 className={`my-2 md:mb-2 uppercase ${!isLocked && \"group-hover:underlined\"}`}>{title}</h4>\n                  ) : (\n                     <h2 className={`mb-3 md:mb-4 uppercase ${!isLocked && \"group-hover:underlined\"}`}>{title}</h2>\n                  )}\n                  {isLocked && (\n                     <div className=\"mb-3 text-secondary\">\n                        <IconLock className=\"w-5 mr-2 inline h-auto\" />\n                        <span>Coming soon...</span>{\" \"}\n                     </div>\n                  )}\n               </div>\n               <div className=\"flex-1\">\n                  <span>{description}</span>\n               </div>\n\n               {isLocked ||\n                  (cta && (\n                     <Button label={cta} customClass={\"hidden xl:inline-block mt-7\"} href={hRef} linkTo={linkTo} />\n                  ))}\n            </div>\n         )}\n      </div>\n   )\n}\n\nexport default ImgTile\n","import * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst observerMap = new Map();\nconst RootIds = new WeakMap();\nlet rootId = 0;\nlet unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== undefined).map(key => {\n    return `${key}_${key === 'root' ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options); // Register the callback listener for this element\n\n  let callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\nconst _excluded = [\"children\", \"as\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nclass InView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.node = null;\n    this._unobserveCb = null;\n\n    this.handleNode = node => {\n      if (this.node) {\n        // Clear the old observer, before we start observing a new element\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    };\n\n    this.handleChange = (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        this.props.onChange(inView, entry);\n      }\n    };\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return this.props.children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const _this$props = this.props,\n          {\n      children,\n      as\n    } = _this$props,\n          props = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return React.createElement(as || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  }\n\n}\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _state$entry;\n\n  const [ref, setRef] = React.useState(null);\n  const callback = React.useRef();\n  const [state, setState] = React.useState({\n    inView: !!initialInView,\n    entry: undefined\n  }); // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n\n  callback.current = onChange;\n  React.useEffect(() => {\n    // Ensure we have node ref, and that we shouldn't skip observing\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        // If it should only trigger once, unobserve the element after it's inView\n        unobserve();\n        unobserve = undefined;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_state$entry = state.entry) == null ? void 0 : _state$entry.target;\n  React.useEffect(() => {\n    if (!ref && entryTarget && !triggerOnce && !skip) {\n      // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n        entry: undefined\n      });\n    }\n  }, [ref, entryTarget, triggerOnce, skip, initialInView]);\n  const result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.modern.mjs.map\n","import React, { useEffect, useState } from \"react\"\nimport { animated, useSpring } from \"react-spring\"\nimport { useInView } from \"react-intersection-observer\"\n\nfunction TransitionInView({ children }) {\n   const [visible, setVisible] = useState(false)\n   const [inviewRef, inView] = useInView({\n      rootMargin: \"0px 0px\",\n   })\n\n   const spring = { mass: 5, tension: 300, friction: 80 }\n\n   const props = useSpring({\n      config: spring,\n      opacity: visible ? 1 : 0,\n      transform: visible ? `translate3d(0,0rem,0)` : `translate3d(0,5rem,0)`,\n   })\n\n   useEffect(() => {\n      if (!visible && inView) {\n         setVisible(true)\n      }\n   }, [inView])\n\n   return (\n      <animated.div ref={inviewRef} style={props}>\n         {children}\n      </animated.div>\n   )\n}\n\nexport default TransitionInView\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport ImgTile from \"../1_components/ImgTile\"\nimport TransitionInview from \"../1_components/TransitionInview\"\n\nfunction ImgTiles({ isPageNav }) {\n   const data = useStaticQuery(graphql`\n      query {\n         classicaImg: file(relativePath: { eq: \"classica/classica_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         petImg: file(relativePath: { eq: \"petTime/petTime_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         spaceDigestImg: file(relativePath: { eq: \"spaceDigest/spaceDigest_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         buzzsumoImg: file(relativePath: { eq: \"buzzsumo/buzzsumo_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         brandwatchImg: file(relativePath: { eq: \"brandwatch/brandwatch_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         homelyImg: file(relativePath: { eq: \"homely/homely_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         theEcoExpertsImg: file(relativePath: { eq: \"theEcoExperts/theEcoExperts_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         mvfDesignSystemtImg: file(relativePath: { eq: \"mvf/mvf_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         shuushImg: file(relativePath: { eq: \"shuush/shuush_tile.png\" }) {\n            id\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n      }\n   `)\n\n   const tilesData = [\n      {\n         id: data.mvfDesignSystemtImg.id,\n         title: \"MVF Design system\",\n         description:\n            \"Established the structure of the MVF multibrand design system.\\n\\nServing as a foundation at the core of the many company websites. The multibrand approach helps maintaining and scale multiple websites with different brands.\",\n\n         img: data.mvfDesignSystemtImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"MVF Design System\",\n         cta: \"View\",\n         linkTo: \"/\",\n         hRef: false,\n         isExternal: false,\n         isLocked: true,\n      },\n      {\n         id: data.buzzsumoImg.id,\n         title: \"BuzzSumo\",\n         description:\n            \"BuzzSumo is a powerful platform that allows you to find engaging pieces of content and discover new potential outreach opportunities.\",\n\n         img: data.buzzsumoImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"Buzzsumo Web Page\",\n         linkTo: \"/projects/buzzsumo\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: false,\n      },\n      {\n         id: data.theEcoExpertsImg.id,\n         title: \"The eco experts\",\n         description:\n            \"Find out how much you’d pay for different home improvements, how much they’d save you and the climate over their lifespan, and which company makes the best.\",\n\n         img: data.theEcoExpertsImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"DIY tool rental\",\n         linkTo: \"/projects/theecoexperts\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: true,\n      },\n      {\n         id: data.shuushImg.id,\n         title: \"Shuush\",\n         description:\n            \" exploration for a minimalistic mesaging app. Designd to eliminate all the superfluous clutter and present only the eesential functional features.\",\n         img: data.shuushImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"Shuush app presentation\",\n         linkTo: \"/projects/shuush\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: false,\n      },\n      {\n         id: data.petImg.id,\n         title: \"Pet Time\",\n         description:\n            \" exploration for a pet management product. Pet Time is a fun and friendly app for animal lovers. Whether you are experts or enthusiastic newbies, you'll find learning resources to help taking care of your pet friend\",\n\n         img: data.petImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"Pet Time App UI Design\",\n         linkTo: \"/projects/pet-time\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: false,\n      },\n      {\n         id: data.homelyImg.id,\n         title: \"Homely\",\n         description:\n            \" exploration for a DIY tool rental product. Homely has a target customer base of amateurs: regular people who sometimes need to access tools for a specific, fairly straightforward DIY task.\",\n         cta: \"View use case\",\n         img: data.homelyImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"DIY tool rental\",\n         linkTo: \"/projects/homely\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: false,\n      },\n      {\n         id: data.classicaImg.id,\n         title: \"Classica\",\n         description:\n            \"Exploration for a classical Music Player product. Classica is a fun and friendly app for the classical music lovers. Whether they are seasoned aficionados or enthusiastic newbies, they'll find plenty of learning material to support their listening experience.\",\n\n         img: data.classicaImg.childImageSharp.gatsbyImageData,\n         imgAlt: \"classica app ui design\",\n         linkTo: \"/projects/classica\",\n         hRef: false,\n         cta: \"View\",\n         isExternal: false,\n         isLocked: false,\n      },\n   ]\n\n   return (\n      <section id=\"work\" className={`${isPageNav ? \"w-full py-12 md:py-24 \" : \"spacing-top spacing-bottom\"}`}>\n         {isPageNav && <h3 className=\"container text-dark mb-10\">Other projects</h3>}\n\n         <div\n            className={`\n            ${\n               isPageNav\n                  ? \"container grid grid-cols-2 md:grid-cols-4 gap-3 md:gap-4 mb-0\"\n                  : \"flex flex-col space-y-10 md:space-y-24\"\n            }`}\n         >\n            {tilesData.map((tile, i) => (\n               <TransitionInview key={tile.id}>\n                  <ImgTile\n                     id={i}\n                     hRef={tile.hRef}\n                     linkTo={tile.linkTo}\n                     title={!isPageNav && tile.title}\n                     titleSmall={false}\n                     description={!isPageNav && tile.description}\n                     cta={tile.cta}\n                     img={tile.img}\n                     imgAlt={tile.imgAlt}\n                     isPageNav={isPageNav}\n                     isExternal={tile.isExternal}\n                     isLocked={tile.isLocked}\n                     isHorizontal={true}\n                     classes={\"\"}\n                  />\n               </TransitionInview>\n            ))}\n         </div>\n      </section>\n   )\n}\n\nexport default ImgTiles\n","var React = require('react');\n\nfunction Lock (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"rect\",{\"width\":\"256\",\"height\":\"256\",\"fill\":\"none\",\"key\":0}),React.createElement(\"rect\",{\"x\":\"40\",\"y\":\"88\",\"width\":\"176\",\"height\":\"128\",\"rx\":\"8\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeWidth\":\"16\",\"key\":1}),React.createElement(\"path\",{\"d\":\"M92,88V52a36,36,0,0,1,72,0V88\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"strokeWidth\":\"16\",\"key\":2}),React.createElement(\"circle\",{\"cx\":\"128\",\"cy\":\"152\",\"r\":\"12\",\"key\":3})]);\n}\n\nLock.defaultProps = {\"width\":\"192\",\"height\":\"192\",\"fill\":\"#000000\",\"viewBox\":\"0 0 256 256\"};\n\nmodule.exports = Lock;\n\nLock.default = Lock;\n"],"names":["id","linkTo","hRef","title","titleSmall","description","cta","img","imgAlt","isPageNav","isExternal","isLocked","isHorizontal","classes","imgHoverMotion","className","Link","to","G","image","alt","loading","href","target","rel","label","customClass","observerMap","Map","RootIds","WeakMap","unsupportedValue","rootId","optionsToId","options","Object","keys","sort","filter","key","undefined","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","length","delete","unobserve","size","disconnect","InView","constructor","props","super","this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","isPlainChildren","onChange","state","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","render","children","ref","_this$props","as","source","excluded","i","sourceKeys","_objectWithoutPropertiesLoose","React","createElement","_extends","visible","setVisible","useState","inviewRef","_state$entry","setRef","current","entryTarget","result","useInView","useSpring","config","mass","tension","friction","opacity","transform","useEffect","animated","style","data","useStaticQuery","tilesData","mvfDesignSystemtImg","childImageSharp","gatsbyImageData","buzzsumoImg","theEcoExpertsImg","shuushImg","petImg","homelyImg","classicaImg","tile","Lock","defaultProps","module","exports","default"],"sourceRoot":""}