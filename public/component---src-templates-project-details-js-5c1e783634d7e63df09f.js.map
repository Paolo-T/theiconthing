{"version":3,"file":"component---src-templates-project-details-js-5c1e783634d7e63df09f.js","mappings":"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","sources":["webpack://todde.design/./src/templates/projectDetails.js"],"sourcesContent":["import React from \"react\"\nimport SEO from \"../components/Seo\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport TransitionPageIn from \"../components/TransitionPageIn\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport ImgTiles from \"../sections/ImgTiles\"\n\nexport const data = graphql`\n   query ($slug: String!) {\n      projectDataJson(slug: { eq: $slug }) {\n         slug\n         hero {\n            subtitle\n            title\n            heroImg {\n               childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n               }\n            }\n         }\n         content_1 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_1 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         contentList {\n            title\n            listItems {\n               description\n               title\n            }\n         }\n         contentImg_2 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         content_2 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_3 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n      }\n   }\n`\n\nexport default function ProjectDetails({ data }) {\n   const { title, subtitle } = data.projectDataJson.hero\n\n   const heroImg = getImage(data.projectDataJson.hero.heroImg.childImageSharp.gatsbyImageData)\n\n   console.log(\"Data\", data)\n\n   return (\n      <>\n         <SEO\n            keywords={[\n               `UI Design`,\n               `UX Design`,\n               `User Experience`,\n               `Web Design`,\n               `Product Design`,\n               `Portfolio`,\n               `App`,\n               `Website`,\n            ]}\n            title={`Paolo Todde | ${title}`}\n         />\n         <div className=\"w-screen bg-white\">\n            {/* Hero */}\n            <TransitionPageIn>\n               <section className=\"pt-10 sm:pt-32 md:pt-32 container\">\n                  <div className=\"page-header mb-6\">\n                     <h1 className=\"h1-page w-full text-dark\">{title}</h1>\n                     <p className=\"text-2xl text-grey md:text-2xl mb-2\">{subtitle}</p>\n                  </div>\n                  <GatsbyImage\n                     image={heroImg}\n                     className=\"mb-24\"\n                     alt={`${title} + \"presentation image\"`}\n                     loading=\"eager\"\n                  />\n               </section>\n               {/* Content */}\n               {(Array.isArray(data.projectDataJson.content_1) || data.projectDataJson.content_1.length) && (\n                  <section className=\"w-full bg-white text-dark\">\n                     {data.projectDataJson.content_1.map((section, i) => (\n                        <div key={i} className=\"container md:mb-16\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 gap-y-16 gap-x-0 mb-20\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-2 mt-1.5 text-grey\">{section.aside.title}</h4>\n                                 {Object.values(section.aside.list).map((item, i) => (\n                                    <p key={i} className=\"text-grey\">\n                                       {item}\n                                    </p>\n                                 ))}\n                              </div>\n                              <div className=\"mt-10 md:mt-0 col-start-5 col-end-11\">\n                                 <h3>{section.main.title}</h3>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               )}\n               {/* Image */}\n               {(Array.isArray(data.projectDataJson.contentImg_1) || data.projectDataJson.contentImg_1.length) &&\n                  data.projectDataJson.contentImg_1.map((image, i) => (\n                     <GatsbyImage\n                        key={i}\n                        image={image.childImageSharp.gatsbyImageData}\n                        className=\"container grid col-span-12\"\n                        alt={`${title} \"presentation image\"`}\n                        loading=\"lazy\"\n                     />\n                  ))}{\" \"}\n               {/* Content list */}\n               <section className=\"container mx-auto grid grid-cols-1 md:grid-cols-12 gap-y-10 md:gap-y-6 gap-x-0 md:py-24 text-dark\">\n                  <h3 className=\"col-start-2 col-end-4\">{data.projectDataJson.contentList.title}</h3>\n                  {(Array.isArray(data.projectDataJson.contentList.listItems) ||\n                     data.projectDataJson.contentList.listItems.length) &&\n                     data.projectDataJson.contentList.listItems.map((listItem, i) => (\n                        <div key={i} className=\"col-start-5 col-end-11\">\n                           <h4 className=\"uppercase tracking-widest col-start-1 col-end-4 md:col-start-1 mb-2\">\n                              {listItem.title}\n                           </h4>\n                           <p className=\"col-start-4 col-end-12\">{listItem.description}</p>\n                        </div>\n                     ))}\n               </section>\n               {/* Image */}\n               {(Array.isArray(data.projectDataJson.contentImg_2) || data.projectDataJson.contentImg_2.length) &&\n                  data.projectDataJson.contentImg_2.map((image, i) => (\n                     <GatsbyImage\n                        key={i}\n                        image={image.childImageSharp.gatsbyImageData}\n                        className=\"container grid col-span-12 mb-20\"\n                        alt={`${title} \"presentation image\"`}\n                        loading=\"lazy\"\n                     />\n                  ))}{\" \"}\n               {/* Content */}\n               {Array.isArray(data.projectDataJson.content_2) && (\n                  <section className=\"w-full bg-white text-dark\">\n                     {data.projectDataJson.content_2.map((section, i) => (\n                        <div key={i} className=\"container md:mb-20\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 gap-y-20 gap-x-0 mb-20\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-2 mt-2 text-grey\">{section.aside.title}</h4>\n                                 {(Array.isArray(section.aside.list) || section.aside.list.length) &&\n                                    Object.values(section.aside.list).map((item, i) => (\n                                       <p key={i} className=\"text-grey\">\n                                          {item}\n                                       </p>\n                                    ))}\n                              </div>\n                              <div className=\"mt-10 md:mt-0 col-start-5 col-end-11\">\n                                 <h3>{section.main.title}</h3>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               )}\n               {/* Image */}\n               {Array.isArray(data.projectDataJson.contentImg_3) &&\n                  data.projectDataJson.contentImg_3.map((image, i) => (\n                     <GatsbyImage\n                        key={i}\n                        image={image.childImageSharp.gatsbyImageData}\n                        className=\"container grid col-span-12 mb-20\"\n                        alt={`${title} \"presentation image\"`}\n                        loading=\"lazy\"\n                     />\n                  ))}{\" \"}\n               {/* Other projects */}\n               <ImgTiles isPageNav={true} />\n            </TransitionPageIn>\n         </div>\n      </>\n   )\n}\n"],"names":["ProjectDetails","data","title","subtitle","projectDataJson","hero","heroImg","getImage","childImageSharp","gatsbyImageData","console","log","keywords","className","G","image","alt","loading","Array","isArray","content_1","length","map","section","i","key","aside","Object","values","list","item","main","body","contentImg_1","contentList","listItems","listItem","description","contentImg_2","content_2","contentImg_3","isPageNav"],"sourceRoot":""}