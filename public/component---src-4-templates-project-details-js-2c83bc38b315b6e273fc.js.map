{"version":3,"file":"component---src-4-templates-project-details-js-2c83bc38b315b6e273fc.js","mappings":"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","sources":["webpack://todde.design/./src/1_components/TransitionPageIn.js","webpack://todde.design/./src/4_templates/projectDetails.js"],"sourcesContent":["import React from \"react\"\nimport { animated, useSpring } from \"react-spring\"\n\nfunction TransitionPageIn({ children }) {\n   const spring = { mass: 1, tension: 100, friction: 30 }\n\n   const fadeIn = useSpring({\n      config: spring,\n      from: {\n         opacity: 0,\n         transform: `translate3d(0rem,0)`,\n      },\n      to: {\n         opacity: 1,\n         transform: `translate3d(0rem,0,0)`,\n      },\n   })\n\n   return <animated.div style={fadeIn}>{children}</animated.div>\n}\n\nexport default TransitionPageIn\n","import React from \"react\"\nimport SEO from \"../1_components/Seo\"\nimport { graphql } from \"gatsby\"\nimport TransitionPageIn from \"../1_components/TransitionPageIn\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport ProjectsTiles from \"../2_sections/ProjectsTiles\"\n\nexport const data = graphql`\n   query($slug: String!) {\n      projectDataJson(slug: { eq: $slug }) {\n         slug\n         hero {\n            subtitle\n            title\n            heroImg {\n               childImageSharp {\n                  gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n               }\n            }\n         }\n         content_1 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_1 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         contentList {\n            title\n            listItems {\n               description\n               title\n            }\n         }\n         contentImg_2 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         content_2 {\n            id\n            aside {\n               list\n               title\n            }\n            main {\n               body\n               title\n            }\n         }\n         contentImg_3 {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n         gallery {\n            childImageSharp {\n               gatsbyImageData(layout: FULL_WIDTH, placeholder: DOMINANT_COLOR, formats: [AUTO, WEBP], quality: 100)\n            }\n         }\n      }\n   }\n`\n\nexport default function ProjectDetails({ data }) {\n   const { title, subtitle } = data.projectDataJson.hero\n   const heroImg =\n      data.projectDataJson.hero.heroImg && getImage(data.projectDataJson.hero.heroImg.childImageSharp.gatsbyImageData)\n   const content_1 = data.projectDataJson.content_1\n   const contentImg_1 = data.projectDataJson.contentImg_1\n   const contentListist = data.projectDataJson.contentList\n   const content_2 = data.projectDataJson.content_2\n   const contentImg_2 = data.projectDataJson.contentImg_2\n   const contentImg_3 = data.projectDataJson.contentImg_3\n   const gallery = data.projectDataJson.gallery\n\n   return (\n      <>\n         <SEO\n            keywords={[\n               `UI Design`,\n               `User Interface design`,\n               `Interaction design`,\n               `Prototyping`,\n               `UX Design`,\n               `UX/UI`,\n               `Visual Design`,\n               `User Experience`,\n               `User centred`,\n               `Web Design`,\n               `Product Design`,\n               `Wireframes`,\n               `Usability testing`,\n               `Portfolio`,\n               `App`,\n               `Website`,\n               `Photography`,\n               `Photo manipulation`,\n               `Photos`,\n               `Illustration`,\n               `Digital art`,\n               `Design thinking`,\n               `Figma`,\n               `Sketch`,\n               `Adobe Photoshop`,\n               `Adobe Illustrator`,\n               `Tailwind css`,\n               `Portfolio`,\n            ]}\n            title={`Paolo Todde | ${title}`}\n         />\n         <div className=\"w-full\">\n            {/* Hero */}\n            <TransitionPageIn>\n               {title && title.length ? (\n                  <section className=\"container pt-32 sm:pt-32 md:pt-48 mb-0 md:mb-24\">\n                     <div className=\"page-header mb-6\">\n                        <h1 className=\"h1-page w-full text-dark\">{title}</h1>\n                        {subtitle ? <p className=\"text-xl md:text-2xl text-grey mb-2\">{subtitle}</p> : null}\n                     </div>\n\n                     {heroImg ? (\n                        <GatsbyImage image={heroImg} alt={`${title} + \"presentation image\"`} loading=\"eager\" />\n                     ) : null}\n                  </section>\n               ) : null}\n               {/* Content */}\n               {content_1 && content_1.length ? (\n                  <section className=\"w-full text-dark\">\n                     {content_1.map((section, i) => (\n                        <div key={i} className=\"container md:mb-20\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 md:gap-y-16 gap-x-0\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-3 mt-1.5 text-grey\">{section.aside.title}</h4>\n                                 {Object.values(section.aside.list).map((item, i) => (\n                                    <p key={i} className=\"text-grey\">\n                                       {item}\n                                    </p>\n                                 ))}\n                              </div>\n                              <div className=\"mt-10 md:mt-0 col-start-5 col-end-11\">\n                                 <h2>{section.main.title}</h2>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               ) : null}\n               {/* Image */}\n               {contentImg_1 && contentImg_1.length\n                  ? contentImg_1.map((image, i) => (\n                       <GatsbyImage\n                          key={i}\n                          image={image.childImageSharp.gatsbyImageData}\n                          className=\"container grid col-span-12 mt-4 md:mt-0\"\n                          alt={`${title} \"presentation image\"`}\n                          loading=\"eager\"\n                       />\n                    ))\n                  : null}{\" \"}\n               {/* Content list */}\n               {contentListist.listItems && contentListist.listItems.length ? (\n                  <section className=\"container mx-auto grid grid-cols-4 md:grid-cols-12 gap-y-6 md:gap-y-6 gap-x-0 py-10 md:py-24 text-dark\">\n                     <h2 className=\"col-start-1 col-end-5 md:col-start-2 md:col-end-4 mb-0 md:mb-4 \">\n                        {contentListist.title}\n                     </h2>\n\n                     {contentListist.listItems.map((listItem, i) => (\n                        <div key={i} className=\"col-start-1 col-end-5 md:col-start-5 md:col-end-11\">\n                           <h4 className=\"uppercase tracking-widest col-start-1 col-end-4 md:col-start-1 mb-2\">\n                              {listItem.title}\n                           </h4>\n                           <p className=\"col-start-4 col-end-12\">{listItem.description}</p>\n                        </div>\n                     ))}\n                  </section>\n               ) : null}\n               {/* Image */}\n               {contentImg_2 && contentImg_2.length\n                  ? contentImg_2.map((image, i) => (\n                       <GatsbyImage\n                          key={i}\n                          image={image.childImageSharp.gatsbyImageData}\n                          className={`container grid col-span-12 mb-20 ${\n                             !data.projectDataJson.contentList.title && \"mt-20\"\n                          }`}\n                          alt={`${title} \"presentation image\"`}\n                          loading=\"lazy\"\n                       />\n                    ))\n                  : null}{\" \"}\n               {/* Content */}\n               {content_2 && content_2.length ? (\n                  <section className=\"w-full text-dark\">\n                     {content_2.map((section, i) => (\n                        <div key={i} className=\"container md:mb-20\">\n                           {/* Paragraph */}\n                           <div className=\"grid grid-cols-1 md:grid-cols-12 gap-y-20 gap-x-0\">\n                              <div className=\"hidden md:block col-start-2 col-end-4 md:mt-16\">\n                                 <h4 className=\"mb-2 mt-2 text-grey\">{section.aside.title}</h4>\n                                 {(Array.isArray(section.aside.list) || section.aside.list.length) &&\n                                    Object.values(section.aside.list).map((item, i) => (\n                                       <p key={i} className=\"text-grey\">\n                                          {item}\n                                       </p>\n                                    ))}\n                              </div>\n                              <div className=\"col-start-5 col-end-11 md:mt-10\">\n                                 <h2>{section.main.title}</h2>\n                                 <p>{section.main.body}</p>\n                              </div>\n                           </div>\n                        </div>\n                     ))}\n                  </section>\n               ) : null}\n               {/* Image */}\n               {contentImg_3 && contentImg_3.length ? (\n                  <section\n                     className={\n                        contentImg_3.length > 3\n                           ? \"container grid grid-cols-3 gap-y-6 md:gap-x-6 \"\n                           : \"container grid col-span-12\"\n                     }\n                  >\n                     {contentImg_3.map((image, i) => (\n                        <GatsbyImage\n                           key={i}\n                           image={image.childImageSharp.gatsbyImageData}\n                           alt={`${title} \"presentation image\"`}\n                           loading=\"lazy\"\n                        />\n                     ))}\n                  </section>\n               ) : null}{\" \"}\n               {/* Gallery */}\n               {gallery && gallery.length ? (\n                  <section className=\"container columns-2 sm:columns-3 md:columns-4 gap-3 sm:gap-4 md:gap-8 mb-0 md:mb-32\">\n                     {Array.isArray(gallery) &&\n                        gallery.map((image, i) => (\n                           <div key={i} className=\"mb-3 md:mb-7\">\n                              <GatsbyImage\n                                 key={i}\n                                 image={image.childImageSharp.gatsbyImageData}\n                                 alt={`${title} \"presentation image\"`}\n                                 loading={i < 4 ? \"eager\" : \"lazy\"}\n                              />\n                              {console.log(\n                                 image.childImageSharp.gatsbyImageData.images.fallback.src\n                                    .split(\"/\")\n                                    .pop()\n                                    .slice(0, -6)\n                                    .replace(\"_\", \"\")\n                              )}\n\n                              {/* <span className=\"text-grey\">\n                                 {image.childImageSharp.gatsbyImageData.images.fallback.src\n                                    .split(\"/\")\n                                    .pop()\n                                    .slice(0, -6)\n                                    .replace(\"_\", \"\")\n                                    .replace(\"2\", \" 2\")}\n                              </span> */}\n                           </div>\n                        ))}{\" \"}\n                  </section>\n               ) : null}\n               <ProjectsTiles isPageNav={true} />\n            </TransitionPageIn>\n         </div>\n      </>\n   )\n}\n"],"names":["children","fadeIn","useSpring","config","mass","tension","friction","from","opacity","transform","to","animated","style","ProjectDetails","data","title","subtitle","projectDataJson","hero","heroImg","getImage","childImageSharp","gatsbyImageData","content_1","contentImg_1","contentListist","contentList","content_2","contentImg_2","contentImg_3","gallery","keywords","className","length","G","image","alt","loading","map","section","i","key","aside","Object","values","list","item","main","body","listItems","listItem","description","Array","isArray","console","log","images","fallback","src","split","pop","slice","replace","isPageNav"],"sourceRoot":""}